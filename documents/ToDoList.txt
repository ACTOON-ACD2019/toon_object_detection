우선적으로 이미지는 사이즈에 영향을 받고 있다. 따라서 학습을 진행할 때도 사이즈를 맞추는 것은 물론이고 글자영역의 픽셀이 늘어지거나 깨지지 않도록 처음부터 정제된 사진을 이용해야한다.
opencv를 이용한 data augmentation 예제를 따라해보며 적용해야함. 단, 디렉토리 오류를 만난상태

data augmentation 3종류를 모두 구현함. 회전된 이미지가 커짐에따라 gpu 용량 터지는 것에 대해서 일괄적인 resize가 필요함.

우선적으로, training 다음 스텝을 먼저 구현할지, data 먼저 구할지 판단이 필요한 시점.

data 18개를 모았고 512 x 512 이미지 크기와 batch size 4로 조정 성공하였음.
gpu 메모리가 터지지 않고, 좌표값(gt)도 정상적으로 잡히는 것을 확인함.
----------------------------------완 료-----------------------------------

다음 스텝으로 캐릭터 단위 문자 슬라이싱을 통해 text score map 과 affinity score map을 생성필요
또한 각각에 map에 대해 가우시안 히트맵으로 만들어야 함.

각 score map의 사이즈는 256 x 256 의 2차원. 따라서 text_score_GT 와 affinity_score_GT 역시
256 x 256 2차원 Gaussian으로 생성되어야 한다는 것을 알 수 있음.
	이를 위해서 캐릭터 단위의 GT 좌표가 우선적으로 필요.
	여기에 opencv를 이용하여 affinity_GT의 좌표도 얻어낸다.
	다음으로 각각에 Gaussian 히트맵과 perspective transform을 통해 warping 한다.
	https://m.blog.naver.com/PostView.nhn?blogId=pckbj123&logNo=100205803400&proxyReferer=https%3A%2F%2Fwww.google.com%2F

이를 통해 구해진 score_map 과 score_GT 의 loss 를 비교해야함.
	open issue 를 좀 떠 뜯어봐야하지만 OHEM 과 MSE 를 활용하는 것 같으니 참고한다.

이 과정을 거치고 나서 loss 계산 식과 MSE OHEM 방식에 대해서 공부를 하자.
기본적으로 인수인계문서 작성을 먼저 하는 것이 옳을 것 같다.

warpPerspective 문서 참고할 필요가 있어보임
